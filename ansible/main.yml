# All machines sudo setup

- name: Configure all devices
  hosts: "*"
  become: true

  tasks:
    - name: Update machines
      ansible.builtin.apt:
        update_cache: true
        upgrade: "yes"

    - name: Install dependencies
      ansible.builtin.apt:
        pkg:
          - i2c-tools
          - git
          - python3-pip

    - name: Device tree overlay
      ansible.builtin.blockinfile:
        path: /boot/firmware/config.txt
        marker: "# {mark} M0WUT PNT Generic"
        block: |
          dtparam=nvme
          dtparam=pciex1_gen=2
          dtparam=i2c_arm=on
          dtoverlay=w1-gpio,gpiopin=24
          dtoverlay=i2c1,pins_2_3
          dtoverlay=i2c4,pins_6_7
          enable_uart=1
          dtoverlay=disable-bt
          dtoverlay=uart3
          dtoverlay=uart5

      register: dt_updated

    - name: Reboot machines
      ansible.builtin.reboot:
      when: dt_updated.changed

    - name: Load kernel modules
      ansible.builtin.blockinfile:
        path: /etc/modules
        marker: "# {mark} M0WUT PNT Generic"
        block: |
          i2c-dev
          w1_ds2431
      register: modules_updated

    - name: Reboot machines
      ansible.builtin.reboot:
      when: modules_updated.changed

    - name: Check if EEPROM is found
      ansible.builtin.find:
        paths: /sys/bus/w1/devices/
        pattern:
          - "eeprom"
        follow: true
        recurse: true
        depth: 2
      register: w1_devices
      failed_when: w1_devices.matched != 1

    - name: Read address EEPROM
      ansible.builtin.shell: "cat {{ w1_devices.files[0].path }}"
      register: eeprom_contents
      changed_when: false
    - name: Check address EEPROM
      ansible.builtin.assert:
        that: "'LID' in eeprom_contents.stdout_lines[0]"
        quiet: true
        fail_msg: |
          "Address EEPROM on baseboard is not configured correctly. Contents should be ASCII LID followed by card address as a raw byte"

    - name: Setup mount point for NVME SSD
      ansible.builtin.file:
        path: /mnt/media/nvme
        state: directory
        mode: "775"

    - name: Check if NVME SSD is plugged in
      ansible.builtin.stat:
        path: /dev/nvme0n1p1
      register: ssd_found

    - name: Mount SSD (if found)
      ansible.posix.mount:
        path: /mnt/media/nvme
        src: /dev/nvme0n1p1
        fstype: ext4
        state: mounted
      when: ssd_found.stat.exists

# Main Reference sudo setup
- name: Primary reference timing setup
  hosts: "primary_references"
  become: true
  vars_files: ['config.yml']
  tasks:
    - name: "Setup gpsd configuration for primary reference"
      ansible.builtin.include_tasks: tasks/gpsd.yml

    - name: "Setup chrony configuration for primary reference"
      ansible.builtin.include_tasks: tasks/chrony.yml

    - name: "Setup MQTT broker on primary reference"
      ansible.builtin.include_tasks: tasks/mqtt_broker.yml

# All machines user setup
- name: Application configuration
  hosts: "*"
  tasks:
    - name: Clone repo
      ansible.builtin.git:
        repo: https://github.com/M0WUT/sdr-pnt.git
        dest: /home/pi/pnt
        recursive: true
